<?xml version="1.0" encoding="UTF-8"?>
<project name="DITA DTD Generator">

  <target name="-init">
    <property file="${basedir}/local.properties"/>
    <property environment="env"/>
    <tstamp>
      <format property="DATE_ISO" pattern="yyyy-mm-dd"/>
      <format property="DATE_STAMP" pattern="yyyymmddhhmmssSSS"/>
    </tstamp>
    <property name="temp.dir" location="${env.HOME}/tmp/ditagen"/>
    <property name="work.dir" location="${temp.dir}/work/${DATE_STAMP}"/>
    <property name="dist.dir" location="${temp.dir}/dist"/>
    <property name="src.dir" location="${basedir}/src"/>
    <property name="python.dir" location="${src.dir}"/>
    <property name="resources.dir" location="${basedir}"/>
    
    <taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask"
             classpath="${basedir}/lib/compiler.jar"/>
    <macrodef name="compiler">
      <attribute name="js"/>
      <attribute name="output"/>
      <sequential>
        <jscomp compilationLevel="simple" prettyPrint="false" warning="quiet"
                output="${src.dir}/js/@{output}">
          <sources dir="${src.dir}/js" files="@{js}"/>
        </jscomp>
      </sequential>
    </macrodef>
  </target>

  <target name="-hg.info" depends="-init">
    <exec outputproperty="build.current.revision" executable="git">
      <arg line='log --pretty=format:"%H" -1'/>
    </exec>
    <exec outputproperty="build.current.revision.short" executable="git">
      <arg line='log --pretty=format:"%h" -1'/>
    </exec>
  </target>

  <target name="-version" unless="version">
    <property name="version" value="r${build.current.revision}"/>
    <echo level="warning">Property version not set, using '${version}'.</echo>
  </target>

  <target name="-manifest" depends="-hg.info">
    <mkdir dir="${work.dir}"/>
    <manifest file="${work.dir}/manifest.mf">
      <attribute name="Built-By" value="${env.USER}"/>
      <attribute name="Build-Date" value="${DATE_ISO}"/>
      <attribute name="Release-Name" value="${ant.project.name}"/>
      <attribute name="Release-Revision" value="${build.current.revision}"/>
    </manifest>
  </target>

  <target name="generate-js" depends="-init" description="Generate JS files from Python source.">
    <mkdir dir="${work.dir}/js"/>
    <exec executable="python" output="${src.dir}/js/domains.js">
      <arg file="${basedir}/build/generate-js.py"/>
      <env key="PYTHONPATH" path="${basedir}/build:${basedir}/build:${python.dir}"/>
    </exec>
    <compiler js="domains.js,form.js" output="generator.js"/>
    <!--compiler js="dtd.js" output="dtd.js"/-->
    <!--compiler js="pdf.js,PdfPreviewController.js" output="pdf.js"/-->
  </target>
  
  <!-- Obsolete -->
  <target name="dist" depends="-init, -manifest, -version" description="Build distribution package.">
    <property name="prefix" value="ditagen-${version}"/>
    <property name="dist.file" location="${dist.dir}/${prefix}.zip"/><!--build.current.-->
    <delete file="${dist.file}"/>
    <mkdir dir="${dist.dir}"/>
    <copy todir="${work.dir}" filtering="true">
      <fileset dir="${python.dir}">
        <include name="setup.py"/>
      </fileset>
      <filterset>
        <filter token="version" value="${version}" />
      </filterset>
    </copy>
    <jar file="${dist.file}" manifest="${work.dir}/manifest.mf">
      <zipfileset dir="${work.dir}" prefix="${prefix}"><!--build.current.-->
        <include name="setup.py"/>
      </zipfileset>
      <zipfileset dir="${python.dir}" prefix="${prefix}"><!--build.current.-->
        <include name="**/*.py"/>
        <exclude name="setup.py"/>
        <exclude name="main.py"/>
        <exclude name="**/*.pyc"/>
      </zipfileset>
      <zipfileset dir="${resources.dir}" prefix="${prefix}"><!--build.current.-->
        <include name="LICENCE"/>
      </zipfileset>
    </jar>
  </target>
  
  <target name="dist.appengine" depends="-init, -manifest, -version, generate-js" description="Build Google App Engine distribution package.">
    <property name="prefix" value="ditagen-appengine-${version}"/>
    <property name="dist.file" location="${dist.dir}/${prefix}.zip"/><!--build.current.-->
    <delete file="${dist.file}"/>
    <mkdir dir="${dist.dir}"/>
    <copy todir="${work.dir}" filtering="true">
      <fileset dir="${src.dir}">
        <include name="*.html"/>
      </fileset>
      <filterset>
        <filter token="version" value="${version}" />
        <filter token="revision" value="${build.current.revision}" />
        <filter token="revision.short" value="${build.current.revision.short}" />
      </filterset>
    </copy>
    <jar file="${dist.file}" manifest="${work.dir}/manifest.mf">
      <zipfileset dir="${work.dir}" prefix="${prefix}">
        <include name="*.html"/>
      </zipfileset>
      <zipfileset dir="${python.dir}" prefix="${prefix}">
        <include name="**/*.py"/>
        <exclude name="setup.py"/>
        <exclude name="ditagen/cli.py"/>
        <exclude name="ditagen/web.py"/>
        <exclude name="**_test.py"/>
        <exclude name="**/*.pyc"/>
      </zipfileset>
      <zipfileset dir="${src.dir}" prefix="${prefix}">
        <include name="app.yaml"/>
        <include name="index.yaml"/>
        <include name="robots.txt"/>
      </zipfileset>
      <zipfileset dir="${src.dir}/images" prefix="${prefix}">
        <include name="favicon.ico"/>
      </zipfileset>
      <zipfileset dir="${src.dir}" prefix="${prefix}">
        <include name="css/*.css"/>
        <include name="images/*.png"/>
        <include name="images/*.gif"/>
      </zipfileset>
      <zipfileset dir="${src.dir}/js" prefix="${prefix}/js">
        <exclude name="domains.js"/>
        <exclude name="form.js"/>
        <exclude name="dtd.js"/>
      </zipfileset>
      <zipfileset dir="${work.dir}/js" prefix="${prefix}/js">
        <include name="*.js"/>
      </zipfileset>
    </jar>
  </target>
  
  <target name="clean" depends="-init">
    <delete dir="${temp.dir}"/>
  </target>
  
</project>
